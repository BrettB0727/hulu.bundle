CACHE_INTERVAL            = 3600

HULU_ASSETS               = 'http://r.hulu.com/videos?eid=%s&include=video_assets'

REGEX_TV_EPISODE_FEED     = Regex('(?P<show>[^-]+) - s(?P<season>[0-9]+) \| e(?P<episode>[0-9]+) - (?P<title>.+)$')

NAMESPACES                = {'activity': 'http://activitystrea.ms/spec/1.0/',
                             'media': 'http://search.yahoo.com/mrss/'}

def Search(query):

  # Create a container to hold the results
  oc = ObjectContainer()

  query = query.replace(" ","+") + "+site:hulu"
  feed_url = "http://www.hulu.com/feed/search?query=" + query + "&sort_by=relevance"
  
  feed = XML.ElementFromURL(feed_url, cacheTime=CACHE_INTERVAL)
  for item in feed.xpath('//channel/item'):
    url = item.xpath('.//link/text()')[0]
    thumb = item.xpath('.//media:thumbnail', namespaces = NAMESPACES)[0].get('url')
    date = Datetime.ParseDate(item.xpath('.//pubDate/text()')[0])

    summary_text = item.xpath('.//description/text()')[0]
    summary_node = HTML.ElementFromString(summary_text)
    summary = summary_node.xpath('.//p/text()')[0]
 
    rating = None
    try: rating = float(REGEX_RATING_FEED.findall(summary_text)[0]) * 2
    except: pass

    title = item.xpath('.//title/text()')[0]
    try:

      # A feed will normally contain individual episodes. Their titles are of formats similar to the following:
      #    The Voice - s2 | e15 - Quarterfinals: Live Eliminations
      # If we detect this, then we can extract the available information. If this fails, then we will simply 
      # fallback to a normal VideoClipObject
      details = REGEX_TV_EPISODE_FEED.match(title).groupdict()

      oc.add(EpisodeObject(
        url = url,
        title = details['title'],
        summary = summary,
        show = details['show'],
        season = int(details['season']),
        index = int(details['episode']),
        thumb = thumb,
        originally_available_at = date,
        rating = rating))
    except:

      oc.add(VideoClipObject(
        url = url,
        title = title,
        summary = summary,
        thumb = thumb,
        originally_available_at = date,
        rating = rating))

  return oc